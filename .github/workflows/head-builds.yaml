name : Branch head Prerelease Images

on:
  push:
    branches:
      - main
      - release/v[0-9]+.(0|x)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: docker.io
  REPO : mallardduck

permissions:
  contents: write

jobs:
  rolling-release:
    permissions:
      contents: read
      id-token: write
    #runs-on : runs-on,image=ubuntu22-full-x64,runner=4cpu-linux-x64,run-id=${{ github.run_id }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository to the runner
        uses: actions/checkout@v4
      - name: Set Branch Tag and Other Variables
        id: set-vars
        run: bash ./.github/scripts/branch-tags.sh >> $GITHUB_OUTPUT
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
      - name : "Read vault secrets"
        uses : rancher-eio/read-vault-secrets@main
        if: ${{ github.repository_owner == 'rancher' }}
        with:
          secrets: |
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials username | DOCKER_USERNAME ;
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials password | DOCKER_PASSWORD
      - name: Delete Previous Rolling Release (if exists)
        run: |
          gh release delete ${{ steps.set-vars.outputs.branch_tag }} --yes || true
          git tag -d ${{ steps.set-vars.outputs.branch_tag }} || true
          git push --delete origin ${{ steps.set-vars.outputs.branch_tag }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create New Rolling Release
        run: |
          # Tag the branch with the dynamic tag
          git tag ${{ steps.set-vars.outputs.branch_tag }}
          git push origin ${{ steps.set-vars.outputs.branch_tag }}

          # Build and release with GoReleaser (No --skip-publish flag)
          goreleaser release --clean --skip-validate

          # Create the GitHub release and attach the artifacts
          gh release create ${{ steps.set-vars.outputs.branch_tag }} dist/* \
            --title "Rolling Release for ${{ steps.set-vars.outputs.branch_tag }}" \
            --notes "Latest build from ${{ github.ref }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}